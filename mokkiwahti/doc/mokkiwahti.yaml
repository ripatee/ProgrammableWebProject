openapi: 3.0.0
info:
  title: Mokkiwahti API
  version: 1.0.0
  description: API documentation for managing locations, sensors, and measurements.
servers:
  - url: http://localhost:5000/api
    description: Local development server
paths:
  /locations/:
    get:
      summary: List all locations
      operationId: listLocations
      tags:
        - Location
      responses:
        '200':
          description: An array of locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
    post:
      summary: Create a new location
      operationId: createLocation
      tags:
        - Location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '201':
          description: Location created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        '400':
          description: Request body vas not valid
        '415':
          description: Wrong media type was used
  /locations/{location}/:
    parameters:
      - $ref: '#/components/parameters/location'
    get:
      summary: Get a specific location
      operationId: getLocation
      tags:
        - Location
      responses:
        '200':
          description: A single location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '404':
          description: Location was not found
    put:
      summary: Update a specific location
      operationId: updateLocation
      tags:
        - Location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: Location updated successfully
        '400':
          description: Request body was not valid
        '404':
          description: Location was not found
        '415':
          description: Unsupported media type was used
    delete:
      summary: Delete a specific location
      operationId: deleteLocation
      tags:
        - Location
      responses:
        '200':
          description: Location deleted successfully
        '404':
          description: Location was not found
  /sensors/:
    get:
      summary: List all sensors
      operationId: listSensors
      tags:
        - Sensor
      responses:
        '200':
          description: An array of sensors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
    post:
      summary: Add a new sensor
      operationId: addSensor
      tags:
        - Sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensor'
      responses:
        '201':
          description: Sensor added successfully
          headers:
            Location:
              $ref: '#/components/headers/Location'
        '400':
          description: Request body was invalid
        '415':
          description: Unsupported media type was used
  /sensors/{sensor}/:
    parameters:
      - $ref: '#/components/parameters/sensor'
    get:
      summary: Get a specific sensor
      operationId: getSensor
      tags:
        - Sensor
      responses:
        '200':
          description: A single sensor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensor'
        '404':
          descrdiption: Sensor was not found
    put:
      summary: Update a specific sensor
      operationId: updateSensor
      tags:
        - Sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensor'
      responses:
        '200':
          description: Sensor updated successfully
        '400':
          description: Request body was invalid
        '404':
          description: Sensor was not found
        '415':
          description: Unsupported media type was used
    delete:
      summary: Delete a specific sensor
      operationId: deleteSensor
      tags:
        - Sensor
      responses:
        '200':
          description: Sensor deleted successfully
        '404':
          description: Sensor was not found
  /sensors/{sensor}/measurements/:
    parameters:
      - $ref: '#/components/parameters/sensor'
    get:
      summary: List all measurements for a sensor
      operationId: listMeasurementsForSensor
      tags:
        - Measurement
      responses:
        '200':
          description: An array of measurements for the specified sensor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
    post:
      summary: Add a new measurement for a sensor
      operationId: addMeasurementForSensor
      tags:
        - Measurement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        '201':
          description: Measurement added successfully
          headers:
            Location:
              $ref: '#/components/headers/Location'
        '400':
          description: Bad request body was used
        '404':
          description: Sensor was not found
        '415':
          description: Unsupported media type was used
  /measurements/{measurement}/:
    parameters:
    - $ref: '#/components/parameters/measurement'
    get:
      summary: Get a specific measurement
      operationId: getMeasurement
      tags:
        - Measurement
      responses:
        '200':
          description: A single measurement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
        '404':
          description: Measurement was not found
    put:
      summary: Update a specific measurement
      operationId: updateMeasurement
      tags:
        - Measurement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        '200':
          description: Measurement updated successfully
        '400':
          description: Bad request body was used
        '404':
          description: Measurement was not found
        '415':
          description: Unsupported media type was used
    delete:
      summary: Delete a specific measurement
      operationId: deleteMeasurement
      tags:
        - Measurement
      responses:
        '200':
          description: Measurement deleted successfully
        '404':
          description: Measurement was not found
  /location/{location}/link/sensors/{sensor}/:
    parameters:
    - $ref: '#/components/parameters/location'
      $ref: '#/components/parameters/sensor'
    put:
      summary: Links sensor to a definied location
      operationId: linkSensorLocation
      tags:
        -  Location Sensor link
      responses:
        '200':
          description: Link made correctly
        '404':
          description: Location or sensor not found
    delete:
      summary: Deletes a link between sensor and location
      operationId: deleteLinkSensorLocation
      tags:
        - Location Sensor link
      responses:
        '200':
          description: Link deleted
        '404':
          description: Resource not found

components:
  schemas:
    Location:
      type: object
      properties:
        name:
          type: string
          description: Unique name of the location.
      required:
        - name
    Sensor:
      type: object
      properties:
        name:
          type: string
          description: Unique name of the sensor.
        sensor_configuration:
          $ref: '#/components/schemas/SensorConfiguration'
      required:
        - name
    SensorConfiguration:
      type: object
      properties:
        interval:
          type: integer
          description: Time interval in seconds between measurements.
        threshold_min:
          type: number
          description: Minimum threshold value for triggering an alert.
        threshold_max:
          type: number
          description: Maximum threshold value for triggering an alert.
      required:
        - interval
    Measurement:
      type: object
      properties:
        temperature:
          type: number
          description: Temperature value measured by the sensor.
        humidity:
          type: number
          description: Humidity value measured by the sensor.
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the measurement was taken.
      required:
        - temperature
        - humidity
        - timestamp
  parameters:
    sensor:
      name: sensor
      in: path
      required: true
      description: Unique identifier of the sensor
      schema:
        type: string
    location:
      name: location
      in: path
      required: true
      description: Unique identifier of the location
      schema:
        type: string
    measurement:
      name: measurement
      in: path
      required: true
      description: Unique identifier of the measurement to delete
      schema:
        type: string
  headers:
    Location:
      name: Location
      description: URL of the created resource
      schema:
        type: string